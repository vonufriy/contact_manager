{"version":3,"sources":["context.js","componenets/contacts/Contact.js","componenets/contacts/Contacts.js","componenets/layout/Header.js","componenets/layout/TextInputGroup.js","componenets/contacts/AddContact.js","componenets/contacts/EditContact.js","componenets/pages/About.js","componenets/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeletClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","bind","float","color","Link","to","marginRight","Contacts","Fragment","contacts_Contact","Header","branding","href","defaultProps","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","PropTypes","string","isRequired","func","text","AddContact","errors","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","post","history","push","_this$state2","layout_TextInputGroup","typy","EditContact","updContact","match","params","put","About","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.07909fd3.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nconst Context = React.createContext();\r\n\r\n\r\nconst reducer = (state,action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload,\r\n                    ...state.contacts]\r\n            } \r\n        case 'UPTADE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => \r\n                    (contact.id === action.payload.id ? (contact = action.payload) : contact )\r\n                )\r\n            }                    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state,action));\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({contacts: res.data});\r\n    }\r\n    render() {\r\n        return (\r\n            <Context.Provider value= {this.state} >\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios';\r\nclass Contact extends Component {\r\n  state ={\r\n    showContactInfo: false\r\n  };\r\n\r\n  onShowClick = e => {   \r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo\r\n    });\r\n  }\r\n  onDeletClick = async (id,dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({type:'DELETE_CONTACT',payload:id});       \r\n    } catch(e) {\r\n      dispatch({type:'DELETE_CONTACT',payload:id});\r\n    }\r\n     \r\n  }\r\n  render() {\r\n    const {name, email, phone,id} = this.props.contact;\r\n    const {showContactInfo} = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n      {value => {\r\n        const {dispatch} =value;\r\n        return(\r\n          <div className=\"card card-body mb-3\">\r\n          <h4>\r\n            {name}\r\n            <i onClick={this.onShowClick} className=\"fas fa-sort-down\" style={{cursor: 'pointer'}}></i>\r\n            <i className=\"fas fa-times\" onClick={this.onDeletClick.bind(this, id, dispatch)} style={{cursor: 'pointer',float: 'right', color: 'red'}}></i>\r\n            <Link to={`contact/edit/${id}`}>\r\n              <i className=\"fas fa-pencil-alt\" style={{cursor: 'pointer',float: 'right', color: 'green',marginRight: '1em'}}></i>\r\n            </Link>\r\n          </h4>\r\n          {showContactInfo ?(   \r\n            <ul className=\"list-group\">\r\n                <li className=\"list-group-item\">Email: {email}</li>\r\n                <li className=\"list-group-item\">Phone: {phone}</li>\r\n            </ul>\r\n          ) : null}\r\n  \r\n        </div>\r\n        )\r\n      }}\r\n    </Consumer>\r\n    )\r\n  }\r\n}\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired    \r\n};\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return(\r\n        <Consumer>\r\n            {value => {\r\n                const {contacts} = value;\r\n                return (\r\n                    <React.Fragment>\r\n                        <h1 className=\"display-4 mb-2\">\r\n                            <span className=\"text-danger\">Contact</span> List\r\n                        </h1>\r\n                        {contacts.map(contact =>(\r\n                            <Contact \r\n                            key={contact.id}\r\n                            contact={contact}                        \r\n                            />\r\n                        ))}\r\n                    </React.Fragment>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\nexport default Contacts;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    const {branding} = props;\r\n    return (\r\n        <nav className= \"nav navbar navbar-expand-styleMedia navbar-dark bg-danger\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n                <div>\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fas fa-home\"></i> Home\r\n                            </Link>                            \r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/contact/add\" className=\"nav-link\">\r\n                                <i className=\"fas fa-plus\"></i> Add\r\n                            </Link>                            \r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link to=\"/about\" className=\"nav-link\">\r\n                                <i className=\"fas fa-question\"></i> About\r\n                            </Link>                            \r\n                        </li>                                                \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>            \r\n    );\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n};\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>\r\n          {label}\r\n      </label>\r\n      <input \r\n          type={type} \r\n          name={name}\r\n          className={classnames('form-control form-control-lg',{'is-invalid':error})}          \r\n          placeholder={placeholder}\r\n          value={value}\r\n          onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}      \r\n    </div>    \r\n  );\r\n};\r\n\r\nTextInputGroup.PropTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired\r\n}\r\nTextInputGroup.defaultProps = {\r\n  text: 'text'\r\n}\r\nexport default TextInputGroup;","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state ={\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors: {\r\n\r\n        }\r\n    }\r\n    onChange = e => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n    onSubmit = async (dispatch,e) => {\r\n        e.preventDefault();\r\n        const {name,email,phone} = this.state;\r\n\r\n        if(name === '') {\r\n            this.setState({\r\n                errors: {name:'Name is required'}\r\n            });\r\n            return;\r\n        }\r\n        if(email === '') {\r\n            this.setState({\r\n                errors: {email:'Email is required'}\r\n            });\r\n            return;\r\n        }\r\n        if(phone === '') {\r\n            this.setState({\r\n                errors: {phone:'Phone is required'}\r\n            });\r\n            return;\r\n        }\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users',newContact);\r\n        dispatch({type: 'ADD_CONTACT',payload: res.data});\r\n        this.setState({\r\n            name: '',\r\n            email:'',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n        this.props.history.push('/');\r\n    }\r\n  render() {\r\n    const {name,email,phone,errors} = this.state;\r\n    return(\r\n        <Consumer>\r\n            {value => {\r\n                const {dispatch} =value;\r\n                return (\r\n                    <div className=\"card mb-3\">\r\n                    <div className=\"card-header\">\r\n                        Add Contact\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                            <TextInputGroup \r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter  name\"\r\n                                value={name}\r\n                                onChange={this.onChange}\r\n                                error={errors.name}\r\n                            />\r\n                            <TextInputGroup \r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Enter  email\"\r\n                                value={email}\r\n                                onChange={this.onChange}\r\n                                typy=\"email\"\r\n                                error={errors.email}\r\n                            />\r\n                            <TextInputGroup \r\n                                label=\"Phone\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Enter  phone\"\r\n                                value={phone}\r\n                                onChange={this.onChange}\r\n                                error={errors.phone}\r\n                            /> \r\n                            <input\r\n                                type=\"submit\"\r\n                                value=\"Add contact\"\r\n                                className=\"btn btn-light btn-block \"\r\n                            />                        \r\n                        </form>\r\n                    </div>\r\n                  </div>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state ={\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors: {\r\n        }\r\n    }\r\n    onChange = e => {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n    async componentDidMount() {\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        \r\n        const contact = res.data;\r\n        this.setState({\r\n            name:   contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone,\r\n        })\r\n    } \r\n    onSubmit = async (dispatch,e) => {\r\n        e.preventDefault();\r\n        const {name,email,phone} = this.state;\r\n\r\n        if(name === '') {\r\n            this.setState({\r\n                errors: {name:'Name is required'}\r\n            });\r\n            return;\r\n        }\r\n        if(email === '') {\r\n            this.setState({\r\n                errors: {email:'Email is required'}\r\n            });\r\n            return;\r\n        }\r\n        if(phone === '') {\r\n            this.setState({\r\n                errors: {phone:'Phone is required'}\r\n            });\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const {id} = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n\r\n        dispatch({type:'UPTADE_CONTACT',payload:res.data})\r\n\r\n        this.setState({\r\n            name: '',\r\n            email:'',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n        this.props.history.push('/');\r\n    }\r\n  render() {\r\n    const {name,email,phone,errors} = this.state;\r\n    return(\r\n        <Consumer>\r\n            {value => {\r\n                const {dispatch} =value;\r\n                return (\r\n                    <div className=\"card mb-3\">\r\n                    <div className=\"card-header\">\r\n                        Edit Contact\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                            <TextInputGroup \r\n                                label=\"Name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter  name\"\r\n                                value={name}\r\n                                onChange={this.onChange}\r\n                                error={errors.name}\r\n                            />\r\n                            <TextInputGroup \r\n                                label=\"Email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Enter  email\"\r\n                                value={email}\r\n                                onChange={this.onChange}\r\n                                typy=\"email\"\r\n                                error={errors.email}\r\n                            />\r\n                            <TextInputGroup \r\n                                label=\"Phone\"\r\n                                name=\"phone\"\r\n                                placeholder=\"Enter  phone\"\r\n                                value={phone}\r\n                                onChange={this.onChange}\r\n                                error={errors.phone}\r\n                            /> \r\n                            <input\r\n                                type=\"submit\"\r\n                                value=\"Uptade contact\"\r\n                                className=\"btn btn-light btn-block \"\r\n                            />                        \r\n                        </form>\r\n                    </div>\r\n                  </div>\r\n                )\r\n            }}\r\n        </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditContact;","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager </h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"> \r\n        <span className=\"text-danger\">404</span> Page no found\r\n      </h1>\r\n      <p className=\"lead\">\r\n        Sorry, that page does not exist\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\nimport {HashRouter as Router,Route,Switch} from 'react-router-dom';\nimport Contacts from './componenets/contacts/Contacts';\nimport Header from './componenets/layout/Header';\nimport AddContact from './componenets/contacts/AddContact';\nimport EditContact from './componenets/contacts/EditContact';\nimport About from './componenets/pages/About';\nimport NotFound from './componenets/pages/NotFound';\nimport {Provider} from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">        \n            <Header branding=\"Contact Manager\"/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts}/>\n                <Route exact path=\"/contact/add\" component={AddContact}/>\n                <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                <Route exact path=\"/about\" component={About}/>\n                <Route component={NotFound} />\n              </Switch>                     \n            </div>              \n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}